#EXE = gppUVM.ex
#SRC = gppUVM.cpp 
EXE = ffUVM.ex
SRC = ffUVM.cpp 

#CXX = g++
CXX = xlc++_r
#CXX = icc

LINK = ${CXX}

ifeq ($(CXX),xlc++_r)
	CXXFLAGS=-O3 -std=gnu++11 -qsmp=noauto:omp -qoffload #-Xptxas -v
    CXXFLAGS+=-I ~/CUDA/include
    #CXXFLAGS+=-arch=sm_70
	LINKFLAGS=-qsmp=noauto:omp -qoffload 
endif 

ifeq ($(CXX),g++)
	CXXFLAGS= -g -O3 -std=c++11 -fopenmp -foffload="-lm" -foffload=nvptx-none
	LINKFLAGS=-fopenmp -foffload="-lm" -foffload=nvptx-none
endif 

ifeq ($(CXX),icc)
    CXXFLAGS=-O3 -std=c++11 -qopenmp -qopt-report=5
#    CXXFLAGS+=-qopenmp-offload=host #For offloading
    CXXFLAGS+=-I ~/CUDA/include
    #CXXFLAGS+=-qno-openmp-offload #For disabling offloading
    CXXFLAGS+=-xCORE-AVX2
    #CXXFLAGS+=-xMIC-AVX512
    LINKFLAGS=-qopenmp #-qopenmp-offload=host#-qopenmp-offload=mic
    #LINKFLAGS+=-dynamic #Dynamic flag gives runtime issues with OMP4.5
endif 

OBJ = $(SRC:.cpp=.o)

$(EXE): $(OBJ) 
	$(CXX) $(OBJ) -o $(EXE) $(LINKFLAGS)

$(OBJ): $(SRC) 
	$(CXX) -c $(SRC) $(CXXFLAGS)

clean: 
	rm -f $(OBJ) $(EXE)

